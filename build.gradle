plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

apply plugin: 'idea'
//apply plugin: 'scala'
//apply plugin: 'java'

//sourceCompatibility = 1.8
//targetCompatibility = 1.8

group 'scala.functional-programming'
version '1.0-SNAPSHOT'

//jacocoTestReport {
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//}

ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

configurations {
    scalaCompiler
}

task compileModelDescriptor(type: ScalaCompile) {
    classpath = configurations.scalaCompiler
}

//repositories {
//    mavenCentral()
//
//    maven { url "http://repo1.maven.org/maven2" }
//    maven { url "http://scala-tools.org/repo-releases" }
//}
//
//dependencies {
//    compile "org.scala-lang:scala-library:2.12.0"
//    testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.0'
//    testCompile "junit:junit:4.12"
//}

subprojects {
    apply plugin: 'java'
    apply plugin: 'scala'
    apply plugin: 'jacoco'
    apply plugin: 'com.github.kt3k.coveralls'

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.0'
    }

    repositories {
        mavenCentral()

        maven { url "http://repo1.maven.org/maven2" }
    }

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}

if (System.env.TRAVIS == 'true') {
    allprojects {
        tasks.withType(GroovyCompile) {
            groovyOptions.fork = false
        }
        tasks.withType(Test) {
            maxParallelForks = 2
            minHeapSize = '128m'
        }
    }
}
